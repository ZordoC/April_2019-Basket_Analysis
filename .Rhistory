<<<<<<< HEAD
=======
MoreThan2Printers <-which(printers>=2)
MoreThan3Monitors <-which(monitors>4 )
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
Indices
BIggerThan6 <- Indices
B2b2 <- DataTran_df[Indices,]
B2b <- DataTran_df[BusinessIndices,]
B2c <- DataTran_df[-B2b3$rownumber,]
B2b3$rownumber
BIggerThan6 <- Indices
if(require("pacman")=="FALSE"){
install.packages('pacman')
library('pacman')
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
}
library(gdata)
Data<-read.csv("/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/ElectronidexTransactions2017.csv",
header=FALSE,sep=",")
write(laptops, file ="/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/laptopindcies.csv")
write(monitors, file ="/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/monitorsindicies.csv" )
write(printers,file  ="/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/printerindiices.csv")
write(desktops,file ="/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/desktopindices.csv")
trans<-read.transactions("/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/ElectronidexTransactions2017.csv",
format="basket",sep=",",rm.duplicates = TRUE)
#### Get product Names into a vector ####
DataToTransf<-as.data.frame(as(trans, "matrix"))
DataToTransf[DataToTransf==TRUE] <- colnames(DataToTransf)[which(DataToTransf==TRUE, arr.ind=TRUE)[,'col']]
#
# ColumnsNames<- colnames(DataTrans_df)
#
# DataToTransf$CLIENT <- "Retail"
# ColumnsNames
##### Manipulate data-frame #####
Data$rownumber <- 1:nrow(Data)
>>>>>>> Jos√©
DataReady <- melt(Data,"rownumber")
DataReady <-  DataReady %>%  filter(value != "") %>%
arrange(rownumber)
#### Subbing product Names, by categories ####
Laptop <- grep(c("Laptop|Aspire|Chromebook|MacBook"),DataReady$value)
Desktop <- grep(c("Desktop|iMac"),DataReady$value)
Tablets <- grep(c("iPad|Tablet|Tab|kindle"),DataReady$value)
Monitor <- grep(c("Monitor"),DataReady$value)
#Keyboard <-grep(c("Mouse|Keyboard"),DataReady$value)
Drives <- grep(c("Hard Drive"),DataReady$value)
Speakers <- grep(c("Speakers|Speaker|Sonos|Cyber Acoustics|DOSS"),DataReady$value)
Cables <- grep(c("Cable|HDMI Adapter"),DataReady$value)
#Combo <- grep(c("Combo"),DataReady$value)
ActiveHeadPhones <- grep(c("Apple Earpods|Monster Beats|Wireless Sports|In-Ear|APIE|Panasonic On-Ear Stereo Headphones RP-HT21|Philips Flexible Earhook Headphone|Panasonic On-Ear Stereo Headphones"),DataReady$value)
Acessories <- grep(c("Microsoft Office Home and Student 2016|Computer Game|Belkin Mouse Pad|Large Mouse Pad"),DataReady$value)
Printers <- grep(c("Epson Printer|HP Wireless Printer|Canon Office Printer|Brother Printer|DYMO Label Manker"),DataReady$value)
PrintersINk <- grep(c("Epson Black Ink|HP Black & Tri-color Ink|Canon Ink|Brother Printer Toner|DYMO Labeling Tape"),DataReady$value)
CStands <- grep(c("Halter Acrylic Monitor Stand|Height-Adjustable|Multi Media Stand|Full Motion Monitor Mount"),DataReady$value)
SmartHome <- grep(c("Apple TV|Google Home|Smart Light Bulb|Fire TV Stick|Roku Express"),DataReady$value)
Mouse <- grep(c("3-Button Mouse|Logitech Wireless Mouse|Logitech 3-button Mouse|Redragon Gaming Mouse|HP Wireless Mouse|Generic Black 3-Button|Slim Wireless Mouse|Microsoft Basic Optical Mouse|Wireless Portable Mouse|Gaming Mouse Professional"),DataReady$value)
Keyboard <- grep(c("HP USB Keyboard|Logitech Wireless Keyboard|Rii LED Keyboard|Logitech Keyboard|Backlit LED Gaming Keyboard|Dell Wired Keyboard|Apple Wired Keyboard|Apple Wireless Keyboard|Apple Magic Keyboard"),DataReady$value)
Combo <- grep(c("Logitech MK550 Wireless Wave Keyboard and Mouse Combo|Logitech Desktop MK120 Mouse and keyboard Combo|Logitech MK270 Wireless Keyboard and Mouse Combo|Dell KM117 Wireless Keyboard & Mouse|EagleTec Wireless Combo Keyboard and Mouse|Microsoft Wireless Comfort Keyboard and Mouse|Microsoft Wireless Desktop Keyboard and Mouse|Rii LED Gaming Keyboard & Mouse Combo|Logitech MK360 Wireless Keyboard and Mouse Combo"),DataReady$value)
ComputerHeadPhones <- grep(c("Zombie Gaming Headset|Logitech ClearChat Headset|Panasonic On-Ear Stereo Headphones RP-HT21|PC Gaming Headset|Kensington Headphones|Logitech Stereo Headset|Koss Home Headphones|Microsoft Headset|Ailihen Stereo Headphones|XIBERIA Gaming Headset"),DataReady$value)
##
DataReady$value -> Names
Names <- replace(Names,Laptop,"Laptop")
Names <- replace(Names,Desktop,"Desktop")
Names <- replace(Names,Tablets,"Tablet")
Names <- replace(Names,Monitor,"Monitor")
Names <- replace(Names,Keyboard,"Keyboard")
Names <- replace(Names,Drives,"Driver")
Names <- replace(Names,Speakers,"Speakers")
Names <- replace(Names,Cables,"Cables")
Names <- replace(Names,Combo,"Combo")
Names <- replace(Names,ActiveHeadPhones,"Active Headphone")
Names <- replace(Names,Acessories,"Acessories")
Names <- replace(Names,Printers,"Printer")
Names <- replace(Names,PrintersINk,"Printer Ink")
Names <- replace(Names,CStands,"Computer Stand")
Names <- replace(Names,SmartHome,"Smart-Home Device")
Names <- replace(Names,Mouse,"Mice")
Names <- replace(Names,ComputerHeadPhones,"Computer Headphone")
#View(Names)
####Split ####
DataReady <- cbind(DataReady,Names)
DataByCategory <- DataReady[,c(1,3,4)]
laptops <- c()
for(i in 1:9835){
laptops[i] <-sum(DataByCategory$rownumber == i  & DataByCategory =="Laptop")
laptops
}
desktops <- c()
for(i in 1:9835){
desktops[i] <-sum(DataByCategory$rownumber == i  & DataByCategory =="Desktop")
desktops
}
printers <- c()
for(i in 1:9835){
printers[i] <-sum(DataByCategory$rownumber == i  & DataByCategory =="Printer")
}
monitors <- c()
for(i in 1:9835){
monitors[i] <-sum(DataByCategory$rownumber == i  & DataByCategory =="Monitor")
monitors
}
#### Conditions for business ####
DataTran_df<-as.data.frame(as(trans, "matrix"))
DataTran_df$rownumber <- 1:nrow(Data)
DTrue <- DataTran_df +0
MySum <- rowSums(DTrue)
DTrue <-cbind(DTrue,MySum)
Vector <- DTrue[,c("MySum")] > 6
Indices <- which(Vector,TRUE)
MoreThan3laptops <- which(laptops >= 3)
MoreThan2desktops <- which(desktops >= 3)
MoreThan2Printers <-which(printers>=2)
MoreThan3Monitors <-which(monitors>4 )
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
Indices
BIggerThan6 <- Indices
B2b2 <- DataTran_df[Indices,]
B2b <- DataTran_df[BusinessIndices,]
B2b3 <- bind_rows(B2b,B2b3)
B2b3 <- unique(B2b3)
B2b3$rownumber
####
B2c <- DataTran_df[-B2b3$rownumber,]
B2c <- as.data.frame(B2c)
#### cut the row number
B2c <- B2c[-126]
B2b3 <- B2b3[-126]
B2bT <- as(B2b3,"transactions")
B2cT <- as(B2c,"transactions")
#
# write.csv(B2b3,file = "/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/B2b.csv")
#
# write.csv(B2c,file = "/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/B2c.csv")
#
# duprows <- which(!is.na(match(rownames(bar),rownames(foo))))
# rbind(foo,bar[-duprows,])
#
DataTran_df$rownumber <- 1:nrow(Data)
DataTran_df<-as.data.frame(as(trans, "matrix"))
DTrue <- DataTran_df +0
MySum <- rowSums(DTrue)
DTrue <-cbind(DTrue,MySum)
Vector <- DTrue[,c("MySum")] > 6
Indices <- which(Vector,TRUE)
MoreThan3laptops <- which(laptops >= 3)
MoreThan2desktops <- which(desktops >= 3)
MoreThan2Printers <-which(printers>=2)
MoreThan3Monitors <-which(monitors>4 )
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
B2b2 <- DataTran_df[Indices,]
B2b <- DataTran_df[BusinessIndices,]
B2b3 <- bind_rows(B2b,B2b3)
B2b3 <- bind_rows(B2b,B2b3)
B2b3 <- bind_rows(B2b,B2b2)
B2b3 <- unique(B2b3)
B2b3$rownumber
DataTran_df$rownumber <- 1:nrow(Data)
DataTran_df<-as.data.frame(as(trans, "matrix"))
DTrue <- DataTran_df +0
MySum <- rowSums(DTrue)
DTrue <-cbind(DTrue,MySum)
Vector <- DTrue[,c("MySum")] > 6
Indices <- which(Vector,TRUE)
MoreThan3laptops <- which(laptops >= 3)
MoreThan2desktops <- which(desktops >= 3)
MoreThan2Printers <-which(printers>=2)
MoreThan3Monitors <-which(monitors>4 )
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
Indices
DataTran_df$rownumber <- 1:nrow(Data)
B2b2 <- DataTran_df[Indices,]
B2b <- DataTran_df[BusinessIndices,]
B2b3 <- bind_rows(B2b,B2b2)
B2b3 <- unique(B2b3)
B2b3$rownumber
B2c <- DataTran_df[-B2b3$rownumber,]
B2c <- B2c[-126]
B2b3 <- B2b3[-126]
B2bT <- as(B2b3,"transactions")
B2cT <- as(B2c,"transactions")
B2bT <- as(B2b3,"transactions")
B2cT <- as(B2c,"transactions")
View(B2bT)
View(B2bT)
View(B2cT)
View(B2cT)
B2bT <- as(B2b3,"transactions")
View(B2bT)
if(require("pacman")=="FALSE"){
install.packages('pacman')
library('pacman')
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
}
library(gdata)
Data<-read.csv("/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/ElectronidexTransactions2017.csv",
header=FALSE,sep=",")
write(laptops, file ="/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/laptopindcies.csv")
write(monitors, file ="/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/monitorsindicies.csv" )
write(printers,file  ="/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/printerindiices.csv")
write(desktops,file ="/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/desktopindices.csv")
trans<-read.transactions("/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/ElectronidexTransactions2017.csv",
format="basket",sep=",",rm.duplicates = TRUE)
#### Get product Names into a vector ####
DataToTransf<-as.data.frame(as(trans, "matrix"))
DataToTransf[DataToTransf==TRUE] <- colnames(DataToTransf)[which(DataToTransf==TRUE, arr.ind=TRUE)[,'col']]
#
# ColumnsNames<- colnames(DataTrans_df)
#
# DataToTransf$CLIENT <- "Retail"
# ColumnsNames
##### Manipulate data-frame #####
Data$rownumber <- 1:nrow(Data)
DataReady <- melt(Data,"rownumber")
DataReady <-  DataReady %>%  filter(value != "") %>%
arrange(rownumber)
#### Subbing product Names, by categories ####
Laptop <- grep(c("Laptop|Aspire|Chromebook|MacBook"),DataReady$value)
Desktop <- grep(c("Desktop|iMac"),DataReady$value)
Tablets <- grep(c("iPad|Tablet|Tab|kindle"),DataReady$value)
Monitor <- grep(c("Monitor"),DataReady$value)
#Keyboard <-grep(c("Mouse|Keyboard"),DataReady$value)
Drives <- grep(c("Hard Drive"),DataReady$value)
Speakers <- grep(c("Speakers|Speaker|Sonos|Cyber Acoustics|DOSS"),DataReady$value)
Cables <- grep(c("Cable|HDMI Adapter"),DataReady$value)
#Combo <- grep(c("Combo"),DataReady$value)
ActiveHeadPhones <- grep(c("Apple Earpods|Monster Beats|Wireless Sports|In-Ear|APIE|Panasonic On-Ear Stereo Headphones RP-HT21|Philips Flexible Earhook Headphone|Panasonic On-Ear Stereo Headphones"),DataReady$value)
Acessories <- grep(c("Microsoft Office Home and Student 2016|Computer Game|Belkin Mouse Pad|Large Mouse Pad"),DataReady$value)
Printers <- grep(c("Epson Printer|HP Wireless Printer|Canon Office Printer|Brother Printer|DYMO Label Manker"),DataReady$value)
PrintersINk <- grep(c("Epson Black Ink|HP Black & Tri-color Ink|Canon Ink|Brother Printer Toner|DYMO Labeling Tape"),DataReady$value)
CStands <- grep(c("Halter Acrylic Monitor Stand|Height-Adjustable|Multi Media Stand|Full Motion Monitor Mount"),DataReady$value)
SmartHome <- grep(c("Apple TV|Google Home|Smart Light Bulb|Fire TV Stick|Roku Express"),DataReady$value)
Mouse <- grep(c("3-Button Mouse|Logitech Wireless Mouse|Logitech 3-button Mouse|Redragon Gaming Mouse|HP Wireless Mouse|Generic Black 3-Button|Slim Wireless Mouse|Microsoft Basic Optical Mouse|Wireless Portable Mouse|Gaming Mouse Professional"),DataReady$value)
Keyboard <- grep(c("HP USB Keyboard|Logitech Wireless Keyboard|Rii LED Keyboard|Logitech Keyboard|Backlit LED Gaming Keyboard|Dell Wired Keyboard|Apple Wired Keyboard|Apple Wireless Keyboard|Apple Magic Keyboard"),DataReady$value)
Combo <- grep(c("Logitech MK550 Wireless Wave Keyboard and Mouse Combo|Logitech Desktop MK120 Mouse and keyboard Combo|Logitech MK270 Wireless Keyboard and Mouse Combo|Dell KM117 Wireless Keyboard & Mouse|EagleTec Wireless Combo Keyboard and Mouse|Microsoft Wireless Comfort Keyboard and Mouse|Microsoft Wireless Desktop Keyboard and Mouse|Rii LED Gaming Keyboard & Mouse Combo|Logitech MK360 Wireless Keyboard and Mouse Combo"),DataReady$value)
ComputerHeadPhones <- grep(c("Zombie Gaming Headset|Logitech ClearChat Headset|Panasonic On-Ear Stereo Headphones RP-HT21|PC Gaming Headset|Kensington Headphones|Logitech Stereo Headset|Koss Home Headphones|Microsoft Headset|Ailihen Stereo Headphones|XIBERIA Gaming Headset"),DataReady$value)
##
DataReady$value -> Names
Names <- replace(Names,Laptop,"Laptop")
Names <- replace(Names,Desktop,"Desktop")
Names <- replace(Names,Tablets,"Tablet")
Names <- replace(Names,Monitor,"Monitor")
Names <- replace(Names,Keyboard,"Keyboard")
Names <- replace(Names,Drives,"Driver")
Names <- replace(Names,Speakers,"Speakers")
Names <- replace(Names,Cables,"Cables")
Names <- replace(Names,Combo,"Combo")
Names <- replace(Names,ActiveHeadPhones,"Active Headphone")
Names <- replace(Names,Acessories,"Acessories")
Names <- replace(Names,Printers,"Printer")
Names <- replace(Names,PrintersINk,"Printer Ink")
Names <- replace(Names,CStands,"Computer Stand")
Names <- replace(Names,SmartHome,"Smart-Home Device")
Names <- replace(Names,Mouse,"Mice")
Names <- replace(Names,ComputerHeadPhones,"Computer Headphone")
#View(Names)
####Split ####
DataReady <- cbind(DataReady,Names)
DataByCategory <- DataReady[,c(1,3,4)]
laptops <- c()
for(i in 1:9835){
laptops[i] <-sum(DataByCategory$rownumber == i  & DataByCategory =="Laptop")
laptops
}
desktops <- c()
for(i in 1:9835){
desktops[i] <-sum(DataByCategory$rownumber == i  & DataByCategory =="Desktop")
desktops
}
printers <- c()
for(i in 1:9835){
printers[i] <-sum(DataByCategory$rownumber == i  & DataByCategory =="Printer")
}
monitors <- c()
for(i in 1:9835){
monitors[i] <-sum(DataByCategory$rownumber == i  & DataByCategory =="Monitor")
monitors
}
#### Conditions for business ####
DataTran_df<-as.data.frame(as(trans, "matrix"))
DTrue <- DataTran_df +0
MySum <- rowSums(DTrue)
DTrue <-cbind(DTrue,MySum)
Vector <- DTrue[,c("MySum")] > 6
Indices <- which(Vector,TRUE)
MoreThan3laptops <- which(laptops >= 3)
MoreThan2desktops <- which(desktops >= 3)
MoreThan2Printers <-which(printers>=2)
MoreThan3Monitors <-which(monitors>4 )
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
Indices
DataTran_df$rownumber <- 1:nrow(Data)
B2b2 <- DataTran_df[Indices,]
B2b <- DataTran_df[BusinessIndices,]
B2b3 <- bind_rows(B2b,B2b2)
B2b3 <- unique(B2b3)
B2b3$rownumber
####
B2c <- DataTran_df[-B2b3$rownumber,]
#### cut the row number
B2c <- B2c[-126]
B2b3 <- B2b3[-126]
B2bT <- as(B2b3,"transactions")
B2cT <- as(B2c,"transactions")
#
# write.csv(B2b3,file = "/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/B2b.csv")
#
# write.csv(B2c,file = "/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/B2c.csv")
#
# duprows <- which(!is.na(match(rownames(bar),rownames(foo))))
# rbind(foo,bar[-duprows,])
#
rm(B2b)
rm(B2b2)
rm(Data)
rm(DataByCategory)
rm(DataReady)
rm(DataTran_df)
rm(DTrue)
rm(trans)
rm(DataToTransf)
transB <- B2bT
transB <- B2bT
#####1.CATEGORIZE LEVEL#####
indicesLaptop <- grepl(c("Laptop|Aspire|Chromebook|MacBook"),transB@itemInfo$labels)
indicesDesktop <- grepl(c("Desktop|iMac"),transB@itemInfo$labels)
indicesTablets <- grepl(c("iPad|Tablet|Tab|Kindle"),transB@itemInfo$labels)
indicesMonitor <- grepl(c("Monitor"),transB@itemInfo$labels)
indicesMiceAndKeyboard <-grepl(c("Mouse|Keyboard"),transB@itemInfo$labels)
indicesHardDRives <- grepl(c("Hard Drive"),transB@itemInfo$labels)
indicesSpeakers <- grepl(c("Speakers|Speaker|Sonos|Cyber Acoustics|DOSS"),transB@itemInfo$labels)
indicesCables <- grepl(c("Cable|HDMI Adapter"),transB@itemInfo$labels)
indicesCombo <- grepl(c("Combo"),transB@itemInfo$labels)
indicesActiveHeadPhones <- grepl(c("Apple Earpods|Monster Beats|Wireless Sports|In-Ear|APIE|Panasonic On-Ear Stereo Headphones RP-HT21|Philips Flexible Earhook Headphone|Panasonic On-Ear Stereo Headphones"),transB@itemInfo$labels)
indicesAcessories <- grepl(c("Microsoft Office Home and Student 2016|Computer Game|Belkin Mouse Pad|Large Mouse Pad"),transB@itemInfo$labels)
indicesPrinters <- grepl(c("Epson Printer|HP Wireless Printer|Canon Office Printer|Brother Printer|DYMO Label Manker"),transB@itemInfo$labels)
indicesPrintersINk <- grepl(c("Epson Black Ink|HP Black & Tri-color Ink|Canon Ink|Brother Printer Toner|DYMO Labeling Tape"),transB@itemInfo$labels)
indicesCStands <- grepl(c("Halter Acrylic Monitor Stand|Height-Adjustable Standing Desk|Multi Media Stand|Full Motion Monitor Mount"),transB@itemInfo$labels)
indicesSmartHome <- grepl(c("Apple TV|Google Home|Smart Light Bulb|Fire TV Stick|Roku Express"),transB@itemInfo$labels)
indicesMouse <- grepl(c("3-Button Mouse|Logitech Wireless Mouse|Logitech 3-button Mouse|Redragon Gaming Mouse|HP Wireless Mouse|Generic Black 3-Button|Slim Wireless Mouse|Microsoft Basic Optical Mouse|Wireless Portable Mouse|Gaming Mouse Professional"),transB@itemInfo$labels)
indicesKeyboard <- grepl(c("HP USB Keyboard|Logitech Wireless Keyboard|Rii LED Keyboard|Logitech Keyboard|Backlit LED Gaming Keyboard|Dell Wired Keyboard|Apple Wired Keyboard|Apple Wireless Keyboard|Apple Magic Keyboard"),transB@itemInfo$labels)
indicesCombo <- grepl(c("Logitech MK550 Wireless Wave Keyboard and Mouse Combo|Logitech Desktop MK120 Mouse and keyboard Combo|Logitech MK270 Wireless Keyboard and Mouse Combo|Dell KM117 Wireless Keyboard & Mouse|EagleTec Wireless Combo Keyboard and Mouse|Microsoft Wireless Comfort Keyboard and Mouse|Microsoft Wireless Desktop Keyboard and Mouse|Rii LED Gaming Keyboard & Mouse Combo|Logitech MK360 Wireless Keyboard and Mouse Combo"),transB@itemInfo$labels)
indicesComputerHeadPhones <- grepl(c("Zombie Gaming Headset|Logitech ClearChat Headset|Panasonic On-Ear Stereo Headphones RP-HT21|PC Gaming Headset|Kensington Headphones|Logitech Stereo Headset|Koss Home Headphones|Microsoft Headset|Ailihen Stereo Headphones|XIBERIA Gaming Headset"),transB@itemInfo$labels)
Names<-transB@itemInfo$labels
transB@itemInfo$labels
#CATEGORIZE THE LABELS
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesLaptop,"Laptop")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesDesktop,"Desktop")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesHardDRives,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesMonitor,"Monitor")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesSpeakers,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesTablets,"Tablets")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesCables,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesActiveHeadPhones,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesAcessories,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesPrinters,"Printers")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesPrintersINk,"Printers Ink")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesCStands,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesSmartHome,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesMouse,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesKeyboard,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesCombo,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesComputerHeadPhones,"Acessories")
#####2.APPLY RULES####
#AGGREGATE BY CATEGORY
B2b_cat<-aggregate(transB, by="category")
RulesBCat<- apriori (B2b_cat, parameter = list(supp = 0.008, conf = 0.2,  minlen=2))
RulesB<- apriori (transB, parameter = list(supp = 0.004, conf = 0.2,  minlen=2))
####3. REDUNDANT #####
#show the redundant rules
is.redundant(RulesB)
#DELETE THE REDUNDANT
RulesB_RED <- RulesBCat[!is.redundant(RulesBCat)]
####3.PLOTTING####
ruleExplorer(RulesB)
transB <- B2bT
#####1.CATEGORIZE LEVEL#####
indicesLaptop <- grepl(c("Laptop|Aspire|Chromebook|MacBook"),transB@itemInfo$labels)
indicesDesktop <- grepl(c("Desktop|iMac"),transB@itemInfo$labels)
indicesTablets <- grepl(c("iPad|Tablet|Tab|Kindle"),transB@itemInfo$labels)
indicesMonitor <- grepl(c("Monitor"),transB@itemInfo$labels)
indicesMiceAndKeyboard <-grepl(c("Mouse|Keyboard"),transB@itemInfo$labels)
indicesHardDRives <- grepl(c("Hard Drive"),transB@itemInfo$labels)
indicesSpeakers <- grepl(c("Speakers|Speaker|Sonos|Cyber Acoustics|DOSS"),transB@itemInfo$labels)
indicesCables <- grepl(c("Cable|HDMI Adapter"),transB@itemInfo$labels)
indicesCombo <- grepl(c("Combo"),transB@itemInfo$labels)
indicesActiveHeadPhones <- grepl(c("Apple Earpods|Monster Beats|Wireless Sports|In-Ear|APIE|Panasonic On-Ear Stereo Headphones RP-HT21|Philips Flexible Earhook Headphone|Panasonic On-Ear Stereo Headphones"),transB@itemInfo$labels)
indicesAcessories <- grepl(c("Microsoft Office Home and Student 2016|Computer Game|Belkin Mouse Pad|Large Mouse Pad"),transB@itemInfo$labels)
indicesPrinters <- grepl(c("Epson Printer|HP Wireless Printer|Canon Office Printer|Brother Printer|DYMO Label Manker"),transB@itemInfo$labels)
indicesPrintersINk <- grepl(c("Epson Black Ink|HP Black & Tri-color Ink|Canon Ink|Brother Printer Toner|DYMO Labeling Tape"),transB@itemInfo$labels)
indicesCStands <- grepl(c("Halter Acrylic Monitor Stand|Height-Adjustable Standing Desk|Multi Media Stand|Full Motion Monitor Mount"),transB@itemInfo$labels)
indicesSmartHome <- grepl(c("Apple TV|Google Home|Smart Light Bulb|Fire TV Stick|Roku Express"),transB@itemInfo$labels)
indicesMouse <- grepl(c("3-Button Mouse|Logitech Wireless Mouse|Logitech 3-button Mouse|Redragon Gaming Mouse|HP Wireless Mouse|Generic Black 3-Button|Slim Wireless Mouse|Microsoft Basic Optical Mouse|Wireless Portable Mouse|Gaming Mouse Professional"),transB@itemInfo$labels)
indicesKeyboard <- grepl(c("HP USB Keyboard|Logitech Wireless Keyboard|Rii LED Keyboard|Logitech Keyboard|Backlit LED Gaming Keyboard|Dell Wired Keyboard|Apple Wired Keyboard|Apple Wireless Keyboard|Apple Magic Keyboard"),transB@itemInfo$labels)
indicesCombo <- grepl(c("Logitech MK550 Wireless Wave Keyboard and Mouse Combo|Logitech Desktop MK120 Mouse and keyboard Combo|Logitech MK270 Wireless Keyboard and Mouse Combo|Dell KM117 Wireless Keyboard & Mouse|EagleTec Wireless Combo Keyboard and Mouse|Microsoft Wireless Comfort Keyboard and Mouse|Microsoft Wireless Desktop Keyboard and Mouse|Rii LED Gaming Keyboard & Mouse Combo|Logitech MK360 Wireless Keyboard and Mouse Combo"),transB@itemInfo$labels)
indicesComputerHeadPhones <- grepl(c("Zombie Gaming Headset|Logitech ClearChat Headset|Panasonic On-Ear Stereo Headphones RP-HT21|PC Gaming Headset|Kensington Headphones|Logitech Stereo Headset|Koss Home Headphones|Microsoft Headset|Ailihen Stereo Headphones|XIBERIA Gaming Headset"),transB@itemInfo$labels)
Names<-transB@itemInfo$labels
transB@itemInfo$labels
#CATEGORIZE THE LABELS
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesLaptop,"Laptop")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesDesktop,"Desktop")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesHardDRives,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesMonitor,"Monitor")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesSpeakers,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesTablets,"Tablets")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesCables,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesActiveHeadPhones,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesAcessories,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesPrinters,"Printers")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesPrintersINk,"Printers Ink")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesCStands,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesSmartHome,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesMouse,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesKeyboard,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesCombo,"Acessories")
transB@itemInfo$category <- replace(transB@itemInfo$category,indicesComputerHeadPhones,"Acessories")
#####2.APPLY RULES####
#AGGREGATE BY CATEGORY
B2b_cat<-aggregate(transB, by="category")
RulesBCat<- apriori (B2b_cat, parameter = list(supp = 0.008, conf = 0.2,  minlen=2))
RulesB<- apriori (transB, parameter = list(supp = 0.004, conf = 0.2 minlen=2))
####3. REDUNDANT #####
#show the redundant rules
is.redundant(RulesB)
#DELETE THE REDUNDANT
RulesB_RED <- RulesBCat[!is.redundant(RulesBCat)]
####3.PLOTTING####
ruleExplorer(RulesB)
transC <- B2cT
transC <- B2cT
#####1.CATEGORY LEVELS####
indicesLaptop <- grepl(c("Laptop|Aspire|Chromebook|MacBook"),transC@itemInfo$labels)
indicesDesktop <- grepl(c("Desktop|iMac"),transC@itemInfo$labels)
indicesTablets <- grepl(c("iPad|Tablet|Tab|Kindle"),transC@itemInfo$labels)
indicesMonitor <- grepl(c("Monitor"),transC@itemInfo$labels)
indicesMiceAndKeyboard <-grepl(c("Mouse|Keyboard"),transC@itemInfo$labels)
indicesHardDRives <- grepl(c("Hard Drive"),transC@itemInfo$labels)
indicesSpeakers <- grepl(c("Speakers|Speaker|Sonos|Cyber Acoustics|DOSS"),transC@itemInfo$labels)
indicesCables <- grepl(c("Cable|HDMI Adapter"),transC@itemInfo$labels)
indicesCombo <- grepl(c("Combo"),transC@itemInfo$labels)
indicesActiveHeadPhones <- grepl(c("Apple Earpods|Monster Beats|Wireless Sports|In-Ear|APIE|Panasonic On-Ear Stereo Headphones RP-HT21|Philips Flexible Earhook Headphone|Panasonic On-Ear Stereo Headphones"),transC@itemInfo$labels)
indicesAcessories <- grepl(c("Microsoft Office Home and Student 2016|Computer Game|Belkin Mouse Pad|Large Mouse Pad"),transC@itemInfo$labels)
indicesPrinters <- grepl(c("Epson Printer|HP Wireless Printer|Canon Office Printer|Brother Printer|DYMO Label Manker"),transC@itemInfo$labels)
indicesPrintersINk <- grepl(c("Epson Black Ink|HP Black & Tri-color Ink|Canon Ink|Brother Printer Toner|DYMO Labeling Tape"),transC@itemInfo$labels)
indicesCStands <- grepl(c("Halter Acrylic Monitor Stand|Height-Adjustable Standing Desk|Multi Media Stand|Full Motion Monitor Mount"),transC@itemInfo$labels)
indicesSmartHome <- grepl(c("Apple TV|Google Home|Smart Light Bulb|Fire TV Stick|Roku Express"),transC@itemInfo$labels)
indicesMouse <- grepl(c("3-Button Mouse|Logitech Wireless Mouse|Logitech 3-button Mouse|Redragon Gaming Mouse|HP Wireless Mouse|Generic Black 3-Button|Slim Wireless Mouse|Microsoft Basic Optical Mouse|Wireless Portable Mouse|Gaming Mouse Professional"),transC@itemInfo$labels)
indicesKeyboard <- grepl(c("HP USB Keyboard|Logitech Wireless Keyboard|Rii LED Keyboard|Logitech Keyboard|Backlit LED Gaming Keyboard|Dell Wired Keyboard|Apple Wired Keyboard|Apple Wireless Keyboard|Apple Magic Keyboard"),transC@itemInfo$labels)
indicesCombo <- grepl(c("Logitech MK550 Wireless Wave Keyboard and Mouse Combo|Logitech Desktop MK120 Mouse and keyboard Combo|Logitech MK270 Wireless Keyboard and Mouse Combo|Dell KM117 Wireless Keyboard & Mouse|EagleTec Wireless Combo Keyboard and Mouse|Microsoft Wireless Comfort Keyboard and Mouse|Microsoft Wireless Desktop Keyboard and Mouse|Rii LED Gaming Keyboard & Mouse Combo|Logitech MK360 Wireless Keyboard and Mouse Combo"),transC@itemInfo$labels)
indicesComputerHeadPhones <- grepl(c("Zombie Gaming Headset|Logitech ClearChat Headset|Panasonic On-Ear Stereo Headphones RP-HT21|PC Gaming Headset|Kensington Headphones|Logitech Stereo Headset|Koss Home Headphones|Microsoft Headset|Ailihen Stereo Headphones|XIBERIA Gaming Headset"),transC@itemInfo$labels)
Names<-transC@itemInfo$labels
### Levels ###
#CATEGORIZE THE LABELS
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesLaptop,"Laptop")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesDesktop,"Desktop")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesHardDRives,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesMonitor,"Monitor")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesSpeakers,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesTablets,"Tablets")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesCables,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesActiveHeadPhones,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesAcessories,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesPrinters,"Printers")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesPrintersINk,"Printers Ink")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesCStands,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesSmartHome,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesMouse,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesKeyboard,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesCombo,"Acessories")
transC@itemInfo$category <- replace(transC@itemInfo$category,indicesComputerHeadPhones,"Acessories")
#AGGREGATE BY CATEGORY
B2c_cat<-aggregate(transC, by="category")
#####2.APPLY RULES#####
RulesC<- apriori (transC, parameter = list(supp = 0.0009, conf = 0.30,  minlen=2))
RulesCat<- apriori (B2c_cat, parameter = list(supp = 0.0002, conf = 0.40,  minlen=2))
####3. REDUNDANT #####
#show the redundant rules
which(is.redundant(RulesC), arr.ind = TRUE, useNames = TRUE)
#DELETE THE REDUNDANT
RulesC_RED <- RulesC[!is.redundant(RulesC)]
####4.PLOTTING#####
ruleExplorer(RulesC)
current_path=getActiveDocumentContext()$path
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,
lubridate, crayon, corrplot,rstudioapi, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
current_path=getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
Data<-read.csv("/data/ElectronidexTransactions2017.csv",
header=FALSE,sep=",")
current_path=getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
Data<-read.csv("/data/ElectronidexTransactions2017.csv",
header=FALSE,sep=",")
Data<-read.csv("../data/ElectronidexTransactions2017.csv",
header=FALSE,sep=",")
current_path=getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
Data<-read.csv("../data/ElectronidexTransactions2017.csv",
header=FALSE,sep=",")
trans<-read.transactions("../data/ElectronidexTransactions2017.csv",
format="basket",sep=",",rm.duplicates = TRUE)
<<<<<<< HEAD
Data$rownumber <- 1:nrow(Data)
Data$rownumber <- rownumber
View(Data)
DataTran_df$rownumber <- rownumber
DataTran_df$rownumber
DataTran_df$rownumber <- rownumber
Data$rownumber <- 1:nrow(Data)
rownumber <- Data$rownumber
DataTran_df$rownumber <- rownumber
DataTran_df<-as.data.frame(as(trans, "matrix"))
DataTran_df$rownumber <- rownumber
Data <- DataTran_df
B2b <- Data[BusinessIndices,]
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
B2b2 <- Data[Indices,]
B2b3 <- bind_rows(B2b,B2b2)
B2b3 <- unique(B2b3)
B2b3$rownumber
B2c <- Data[-B2b3$rownumber,]
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,rstudioapi,gdata,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
if(require("pacman")=="FALSE"){
install.packages('pacman')
library('pacman')
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,rstudioapi,gdata,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
}
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
Data <- read.csv(file = "./data/ElectronidexTransactions2017.csv", header = TRUE , sep =',')
setwd(dirname(current_path))
setwd("..")
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
getwd
wd
current_path = getActiveDocumentContext()$path
current_path
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,rstudioapi,gdata,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
if(require("pacman")=="FALSE"){
install.packages('pacman')
library('pacman')
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,rstudioapi,gdata,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
}
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
Data <- read.csv(file = "./data/ElectronidexTransactions2017.csv", header = TRUE , sep =',')
trans<-read.transactions("./data/ElectronidexTransactions2017.csv",
format="basket",sep=",",rm.duplicates = TRUE)
B2bT <- as(B2b,"transactions")
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
BIggerThan6 <- Indices
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
BusinessIndices1 <- as.data.frame(BusinessIndices)
Indices1 <- as.data.frame(Indices)
B2b3$rownumber
B2b3 <- unique(B2b3)
B2c <- Data[-B2b3$rownumber,]
B2c <- as.data.frame(B2c)
View(B2b3)
B2b3 < B2b3[-126]
B2b3 < B2b3,-126]
B2b3 <- B2b3,-126]
B2b3 <- B2b3,-126]
B2b3 <- B2b3[,-126]
B2c <- Data[-B2b3$rownumber,]
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
BIggerThan6 <- Indices
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
BusinessIndices1 <- as.data.frame(BusinessIndices)
Indices1 <- as.data.frame(Indices)
B2b3$rownumber
Data$rownumber <- 1:nrow(Data)
DataReady <- melt(Data,"rownumber")
DataReady <-  DataReady %>%  filter(value != "") %>%
arrange(rownumber)
DataTran_df<-as.data.frame(as(trans, "matrix"))
DTrue <- DataTran_df +0
MySum <- rowSums(DTrue)
DTrue <-cbind(DTrue,MySum)
Vector <- DTrue[,c("MySum")] > 6
View(Vector)
Indices <- which(Vector,TRUE)
MoreThan3laptops <- which(laptops >= 3)
MoreThan2desktops <- which(desktops >= 3)
MoreThan2Printers <-which(printers>=2)
MoreThan3Monitors <-which(monitors>4 )
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
BIggerThan6 <- Indices
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
BusinessIndices1 <- as.data.frame(BusinessIndices)
Indices1 <- as.data.frame(Indices)
B2b3$rownumber
View(DataReady)
View(B2c)
View(B2c3)
View(DTrue)
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
BusinessIndices1 <- as.data.frame(BusinessIndices)
Indices1 <- as.data.frame(Indices)
B2b3$rownumber
B2b3 <- unique(B2b3)
B2b3$rownumber
B2b3 <- bind_row(B2b2,B2b)
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,rstudioapi,gdata,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
if(require("pacman")=="FALSE"){
install.packages('pacman')
library('pacman')
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,rstudioapi,gdata,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
}
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
BIggerThan6 <- Indices
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
B2b3 <- bind_row(B2b2,B2b)
B2b3 <- bind_rows(B2b2,B2b)
B2b3$rownumber
B2b3 <- unique(B2b3)
B2c <- Data[-B2b3$rownumber,]
BIggerThan6 <- Indices
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
View(B2b2)
B2b2 <- Data[Indices,]
B2b2 <- Data[Indices,]
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
DataTran_df<-as.data.frame(as(trans, "matrix"))
DTrue <- DataTran_df +0
MySum <- rowSums(DTrue)
DTrue <-cbind(DTrue,MySum)
Vector <- DTrue[,c("MySum")] > 6
View(Vector)
Indices <- which(Vector,TRUE)
MoreThan3laptops <- which(laptops >= 3)
MoreThan2desktops <- which(desktops >= 3)
MoreThan2Printers <-which(printers>=2)
MoreThan3Monitors <-which(monitors>4 )
BusinessIndices <- (c(MoreThan2desktops,MoreThan2Printers,MoreThan3laptops,MoreThan3Monitors))
BIggerThan6 <- Indices
B2b2 <- Data[Indices,]
B2b <- Data[BusinessIndices,]
BusinessIndices1 <- as.data.frame(BusinessIndices)
Indices1 <- as.data.frame(Indices)
B2b3 <- unique(B2b3)
B2c <- Data[-B2b3$rownumber,]
B2b2 <- Data[Indices,]
View(B2b2)
View(B2b3)
Data$rownumber <- 1:nrow(Data)
DataReady <- melt(Data,"rownumber")
DataReady <-  DataReady %>%  filter(value != "") %>%
arrange(rownumber)
Data <- read.csv(file = "./data/ElectronidexTransactions2017.csv", header = TRUE , sep =',')
trans<-read.transactions("./data/ElectronidexTransactions2017.csv",
format="basket",sep=",",rm.duplicates = TRUE)
Data$rownumber <- 1:nrow(Data)
DataReady <- melt(Data,"rownumber")
DataReady <-  DataReady %>%  filter(value != "") %>%
arrange(rownumber)
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,rstudioapi,gdata,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
pacman::p_load(here, stringr, readxl, plyr, caret, dplyr, doParallel,rstudioapi,gdata,
lubridate, crayon, corrplot, ggplot2, e1071, reshape2, tidyverse, arules, arulesViz)
DataReady <-  DataReady %>%  filter(value != "") %>%
arrange(rownumber)
Data$rownumber <- 1:nrow(Data)
DataReady <- melt(Data,"rownumber")
DataReady <-  DataReady %>%  filter(value != "") %>%
arrange(rownumber)
View(Data)
Data <- read.csv(file = "./data/ElectronidexTransactions2017.csv", header = TRUE , sep =',')
Data <- read.csv(file = "./data/ElectronidexTransactions2017.csv", header = TRUE , sep =',')
Data <- read.csv(file = "/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/ElectronidexTransactions2017.csv", header = TRUE , sep =',')
trans<-read.transactions("/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/ElectronidexTransactions2017.csv",
format="basket",sep=",",rm.duplicates = TRUE)
View(Data)
Data <- read.csv(file = "/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/ElectronidexTransactions2017.csv", header = TRUE , sep =',')
View(Data)
Data <- read.csv(file = "/home/zordo/Documents/Ubiqum/R-M2Task4/RM2T4/data/ElectronidexTransactions2017.csv")
Data <- read.csv(file = "./data/ElectronidexTransactions2017.csv", header = TRUE , sep =',')
trans<-read.transactions("./data/ElectronidexTransactions2017.csv",
format="basket",sep=",",rm.duplicates = TRUE)
DataToTransf<-as.data.frame(as(trans, "matrix"))
DataToTransf
DataToTransf
=======
getwd
getwd()
current_path=getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
getwd()
>>>>>>> Jos√©
